MySQL

DROP TABLE IF EXISTS `logging_event`; 

CREATE TABLE `logging_event` 
  ( 
     `timestmp`          LONG NOT NULL, 
     `formatted_message` TEXT NOT NULL, 
     `logger_name`       VARCHAR(255) NOT NULL, 
     `level_string`      VARCHAR(255) NOT NULL, 
     `thread_name`       VARCHAR(255) NOT NULL, 
     `reference_flag`    SMALLINT NOT NULL, 
     `caller_filename`   VARCHAR(255) NOT NULL, 
     `arg0`              VARCHAR(255), 
     `arg1`              VARCHAR(255), 
     `arg2`              VARCHAR(255), 
     `arg3`              VARCHAR(255), 
     `caller_class`      VARCHAR(255) NOT NULL, 
     `caller_method`     VARCHAR(255) NOT NULL, 
     `caller_line`       VARCHAR(255) NOT NULL, 
     `event_id`          INT NOT NULL auto_increment, 
     PRIMARY KEY (event_id) 
  ) 
engine=innodb 
DEFAULT charset=latin1; 



DROP TABLE IF EXISTS `logging_event_property`; 

CREATE TABLE `logging_event_property` 
  ( 
     `event_id`     INT NOT NULL, 
     `mapped_key`   VARCHAR(255) NOT NULL, 
     `mapped_value` TEXT NOT NULL 
  ) 
engine=innodb 
DEFAULT charset=latin1; 


DROP TABLE IF EXISTS `logging_event_exception`; 

CREATE TABLE `logging_event_exception` 
  ( 
     `event_id`   INT NOT NULL, 
     `i`          SMALLINT NOT NULL, 
     `trace_line` VARCHAR(255) NOT NULL 
  ) 
engine=innodb 
DEFAULT charset=latin1; 


SQLite ( sqlite3 -init setups.sql -version logback.db)

DROP TABLEIF EXISTS `logging_event_exception`;BEGIN; 
  DROP TABLE 
  if exists logging_event_property; 
  DROP TABLE 
  if exists logging_event_exception; 
  DROP TABLE 
  if exists logging_event; 
  COMMIT; 
  BEGIN; 
    CREATE TABLE logging_event 
                 ( 
                              timestmp BIGINT NOT NULL, 
                              formatted_message TEXT NOT NULL, 
                              logger_name     VARCHAR(254) NOT NULL, 
                              level_string    VARCHAR(254) NOT NULL, 
                              thread_name     VARCHAR(254), 
                              reference_flag  SMALLINT, 
                              arg0            VARCHAR(254), 
                              arg1            VARCHAR(254), 
                              arg2            VARCHAR(254), 
                              arg3            VARCHAR(254), 
                              caller_filename VARCHAR(254) NOT NULL, 
                              caller_class    VARCHAR(254) NOT NULL, 
                              caller_method   VARCHAR(254) NOT NULL, 
                              caller_line     CHAR(4) NOT NULL, 
                              event_id        INTEGER NOT NULL PRIMARY KEY autoincrement 
                 ); 
     
    COMMIT; 
    BEGIN; 
      CREATE TABLE logging_event_property 
                   ( 
                                event_id   BIGINT NOT NULL, 
                                mapped_key VARCHAR(254) NOT NULL, 
                                mapped_value TEXT, 
                                PRIMARY KEY(event_id, mapped_key), 
                                FOREIGN KEY (event_id) REFERENCES logging_event(event_id) 
                   ); 
       
      COMMIT; 
      BEGIN; 
        CREATE TABLE logging_event_exception 
                     ( 
                                  event_id   BIGINT NOT NULL, 
                                  i          SMALLINT NOT NULL, 
                                  trace_line VARCHAR(254) NOT NULL, 
                                  PRIMARY KEY(event_id, i), 
                                  FOREIGN KEY (event_id) REFERENCES logging_event(event_id) 
                     ); 
         
        COMMIT;