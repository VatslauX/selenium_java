<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head profile="http://selenium-ide.openqa.org/profiles/test-case">
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <link rel="selenium.base" href="https://datatables.net/examples/api/highlight.html" />
    <title>sample</title>
<!-- 
http://release.seleniumhq.org/selenium-core/1.0.1/reference.html#actions
https://developer.mozilla.org/en-US/docs/Web/API/Element
http://stackoverflow.com/questions/17674397/selenium-ide-basic-authentication
-->
  </head>
  <body>
    <table cellpadding="1" cellspacing="1" border="1">
      <thead>
        <tr>
          <td rowspan="1" colspan="3">sample</td>
        </tr>
      </thead>
      <tbody>
<!--
<tr>
  <td>store</td>
  <td>username</td>
  <td>stored_username</td>
</tr>
<tr>
  <td>store</td>
  <td>password</td>
  <td>stored_password</td>
</tr>
<tr>
    <td>open</td>
    <td>http://${stored_username}:${stored_password}@site.my/</td>
    <td></td>
</tr>
-->
        <tr>
          <td>open</td>
          <td>https://datatables.net/examples/api/highlight.html</td>
          <td></td>
        </tr>
        <tr>
          <td>click</td>
          <td>//table[@id='example']/thead/tr/th[6]</td>
          <td></td>
        </tr>
        <tr>
          <td>store</td>
          <td>div#example_wrapper table#example tbody tr.even</td>
          <td>table_row_selector</td>
        </tr>
        <tr>
          <td>echo</td>
          <td>${table_row_selector}</td>
          <td></td>
        </tr>
        <tr>
          <td>store</td>
          <td>2</td>
          <td>column_index</td>
        </tr>
        <tr>
          <td>store</td>
          <td>td:nth-child(${column_index})</td>
          <td>column_selector</td>
        </tr>
        <tr>
          <td>echo</td>
          <td>${column_selector}</td>
          <td></td>
        </tr>
        <tr>
          <td>storeEval</td>
          <td>(function() {
git_hashes = { '8e565c8' : 7 , '9683baa': 2, '1e3ad71' : 1 }

// Array.prototype.max = function() {
//   return Math.max.apply(null, this);
// };

array_keys = [];
array_values = [];

for (var key in git_hashes) {
    array_keys.push(key);
    array_values.push(git_hashes[key]);
}
max_freq = array_values.max()
for (var key in git_hashes) {
  if (git_hashes[key] === max_freq) {
  delete git_hashes[key]
  }
}

array_keys = [];
for (var key in git_hashes) {
    array_keys.push(key);
}
return array_keys.join()
})();</td>
          <td>result</td>
        </tr>
        <tr>
          <td>echo</td>
          <td>${result}</td>
          <td></td>
        </tr>
        <tr>
          <td>runScript</td>
          <td>
try {
  var table_row_selector = storedVars['table_row_selector'];
  console.log(table_row_selector);
} catch (e) {
  // ReferenceError: storedVars is not defined
  // available only in storeEval 
}
table_row_selector = "${table_row_selector}";
console.log(table_row_selector);
var rows = document.querySelectorAll(table_row_selector);
var result = [];
for (row_cnt = 0; row_cnt != rows.length; row_cnt++) {
  var row = rows[row_cnt];
  if (row instanceof Element) {
    var cols = row.querySelectorAll('td');
    var col_num = 1;
    result.push(cols[col_num].innerHTML);
  }
}
console.log(result.join());</td>
          <td></td>
        </tr>
        <tr>
          <td>storeEval</td>
          <td>(function() {
  var table_row_selector = storedVars['table_row_selector'];
  var column_selector = storedVars['column_selector'];
  var rows = window.document.querySelectorAll(table_row_selector);
  var result = [];
  for (row_cnt = 0; row_cnt != rows.length; row_cnt++) {
		var row = rows[row_cnt];
		if (row instanceof Element) {
      // var cols = row.querySelectorAll('td');
			// var col_num = 1;
			// result.push(cols[col_num].innerHTML);
			var col = row.querySelectorAll(column_selector);
			result.push(col[0].innerHTML);
		}
	}
	return result;
})();</td>
          <td>result</td>
        </tr>
        <tr>
          <td>echo</td>
          <td>${result}</td>
          <td></td>
        </tr>
        <tr>
          <td>storeEval</td>
          <td>(function() {
  // var table_selector = '${table_css_selector}';
  // var row_selector = '${row_css_selector}';
  // var column_selector = '${column_css_selector}';
  var table_selector = 'html body div table.sortable';
  var row_selector = 'tbody tr';
  var column_selector = 'td:nth-child(1)';
  var col_num = 0;
  var table_selector = 'html body div table.sortable';
  var row_selector = 'tbody tr';
  var column_selector = 'td:nth-child(1)';
  col_num = 0;
  var tables = window.document.querySelectorAll(table_selector);
  var result = [];
  for (table_cnt = 0; table_cnt != tables.length; table_cnt++) {
      var table = tables[table_cnt];
      if (table instanceof Element) {
          var rows = table.querySelectorAll(row_selector);
          // skip first row
          for (row_cnt = 1; row_cnt != rows.length; row_cnt++) {
              var row = rows[row_cnt];
              if (row instanceof Element) {
                  var cols = row.querySelectorAll(column_selector);
                  if (cols.length > 0) {
                      result.push(cols[0].innerHTML);
                  }
              }
          }
      }
  }
  return result.join();
  })();</td>
          <td>result</td>
        </tr>
        <tr>
          <td>echo</td>
          <td>${result}</td>
          <td></td>
        </tr>
        <tr>
          <td>storeEval</td>
          <td>(function() {
  // var table_selector = '${table_css_selector}';
  // var row_selector = '${row_css_selector}';
  // var column_selector = '${column_css_selector}';
  var table_selector = 'html body div table.sortable';
  var row_selector = 'tbody tr';
  var column_selector = 'td:nth-child(3)';
  col_num = 0;
  var tables = window.document.querySelectorAll(table_selector);
  var git_hashes = {};
  for (table_cnt = 0; table_cnt != tables.length; table_cnt++) {
      var table = tables[table_cnt];
      // console.log("table " + table_cnt);
      if (table instanceof Element) {
          // console.log(table.innerHTML);
          var rows = table.querySelectorAll(row_selector);
          // skip first row
          for (row_cnt = 1; row_cnt != rows.length; row_cnt++) {
              var row = rows[row_cnt];
              //console.log("row " + row_cnt);
              if (row instanceof Element) {
                  // console.log(row.innerHTML)
                  // console.log(column_selector);        
                  var cols = row.querySelectorAll(column_selector);
                  if (cols.length > 0) {
                      // console.log(cols.size);
                      data = cols[0].innerHTML
                      if (!git_hashes[data]) {
                          git_hashes[data] = 0;
                      }
                      git_hashes[data]++;
                  }
              }
          }
      }
  }
  var sortNumber = function(a, b) {
    // reverse numeric sort
      return b - a;
  }
  var removeFrequentKey = function(datahash) {
      var array_keys = [];
      var array_values = [];
      for (var key in datahash) {
          array_keys.push(key);
          array_values.push(0 + datahash[key]);
      }
      max_freq = array_values.sort(sortNumber)[0]
      for (var key in datahash) {
          if (datahash[key] === max_freq) {
              delete datahash[key]
          }
      }
      return datahash;
  }
  
  git_hashes = removeFrequentKey(git_hashes);
  
  var array_keys = [];
  for (var key in git_hashes) {
      array_keys.push(key);
  }
  
  return array_keys.join();
  })();</td>
          <td>result</td>
        </tr>
        <tr>
          <td>echo</td>
          <td>${result}</td>
          <td></td>
        </tr>
        <tr>
          <td>storeEval</td>
          <td>(function() {
var result = {};
var table_selector = 'html body div table.sortable';
var row_selector = 'tbody tr';
var hash_column_selector = 'td:nth-child(3)';
var master_server_column_selector = 'td:nth-child(1)';
var git_hashes_str = arguments[0];
// var git_hashes_str = '259c762,25bad25,2bad762,b26e5f1,bade5f1,d1bad8d,d158d8d,533acf2,533ace2,1b24bca,1b24bc2,d3c1652,d3aaa52,7538e12,7000e12';

var col_num = 0;
var git_hashes = {};
var git_hashes_keys = git_hashes_str.split(',');
for (var key in git_hashes_keys) {
	git_hashes[git_hashes_keys[key]] = 1;
}
var tables = document.querySelectorAll(table_selector);


for (table_cnt = 0; table_cnt != tables.length; table_cnt++) {
	var table = tables[table_cnt];
	if (table instanceof Element) {
		var rows = table.querySelectorAll(row_selector);
		// skip first row
		for (row_cnt = 1; row_cnt != rows.length; row_cnt++) {
			var row = rows[row_cnt];
			if (row instanceof Element) {
				var hash_cols = row.querySelectorAll(hash_column_selector);
				if (hash_cols.length > 0) {
					data = hash_cols[0].innerHTML;
					data = data.replace(/\s+/g, '');
					if (git_hashes[data]) {
						var master_server_cols = row.querySelectorAll(master_server_column_selector);
						if (master_server_cols.length > 0) {
							data = master_server_cols[0].innerHTML;
							data = data.replace(/\s+/g, '');
							if (!result[data]) {
								result[data] = 0;
							}
							result[data]++;
						}
					}
				}
			}
		}
	}
}
var array_keys = [];
for (var key in result) {
	array_keys.push(key);
}

return array_keys.join();
  })();</td>
          <td>result</td>
        </tr>
        <tr>
          <td>echo</td>
          <td>${result}</td>
          <td></td>
        </tr>
      </tbody>
    </table>
  </body>
</html>
