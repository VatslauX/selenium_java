<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>dockerization</artifactId>
  <parent>
    <groupId>by.andd3dfx</groupId>
    <artifactId>testing-docker-image-with-jbehave</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  <dependencies>
    <dependency>
      <groupId>by.andd3dfx</groupId>
      <artifactId>spring-boot-empty-project</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.3</version>
        <executions>
          <execution>
            <id>copy</id>
            <phase>package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>by.andd3dfx</groupId>
                  <artifactId>spring-boot-empty-project</artifactId>
                  <version>${project.version}</version>
                  <outputDirectory>${project.build.directory}/lib</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.4.13</version>
        <configuration>
          <serverId>docker-hub</serverId>
          <registryUrl>https://${dockerRepository}</registryUrl>
          <!--
          <dockerDirectory>${env.PROGRAMFILES}/Docker Toolbox</dockerDirectory>
          -->
          <!-- 
          Uncommenting the above leads to the 500: HTTP 500 Internal Server Error in https://192.168.99.101:2376/build?t=jbehave-spring-boot-simple-app-image:1.0-SNAPSHOT 
          -->
          <baseImage>java:8u111-jre-alpine</baseImage>
          <imageName>jbehave-spring-boot-simple-app-image:${project.version}</imageName>
          <dockerHost>https://192.168.99.101:2376</dockerHost>
          <!-- update from docker-machine ip command executed in Docker QuickStart shell -->
          <!-- do not use tcp://<HOST>:2376 - HTTPS URI for DOCKER_HOST must be provided to use Docker client certificates  -->
          <dockerCertPath>${env.USERPROFILE}/.docker/machine/machines/default</dockerCertPath>
          <!-- update from DOCKER_CERT_PATH env defined in Docker QuickStart shell. Omitting this setting leads to 
          PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
          -->
        </configuration>
        <executions>
          <!-- *** Build images *** -->
          <execution>
            <id>build-spring-boot-simple-app-image</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
            <configuration>
              <imageName>jbehave-spring-boot-simple-app-image:${project.version}</imageName>
              <baseImage>java:8u111-jre-alpine</baseImage>
              <!-- run application when container start -->
              <entryPoint>["java", "-jar", "/spring-boot-empty-project-${project.version}.jar"]</entryPoint>
              <!-- copy the service's jar file from target into the root directory of the image -->
              <resources>
                <resource>
                  <targetPath>/</targetPath>
                  <directory>${project.build.directory}/lib</directory>
                  <include>spring-boot-empty-project-${project.version}.jar</include>
                </resource>
              </resources>
            </configuration>
          </execution>
          <!-- *** Tag images *** -->
          <execution>
            <id>tag-spring-boot-simple-app-image</id>
            <phase>package</phase>
            <goals>
              <goal>tag</goal>
            </goals>
            <configuration>
              <image>jbehave-spring-boot-simple-app-image:${project.version}</image>
              <newName>${dockerRepository}/jbehave-spring-boot-simple-app-image:${project.version}</newName>
            </configuration>
          </execution>
          <!-- *** Push images *** -->
          <execution>
            <id>push-spring-boot-simple-app-image</id>
            <phase>deploy</phase>
            <goals>
              <goal>push</goal>
            </goals>
            <configuration>
              <imageName>${dockerRepository}/jbehave-spring-boot-simple-app-image:${project.version}</imageName>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
